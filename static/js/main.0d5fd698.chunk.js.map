{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactForm/ContactForm.js","ContactList/ContactList.js","ContactList/Contact/Contact.js","Filter/Filter.js","App.js","index.js","ContactList/Contact/Contact.module.css","Filter/Filter.module.css","ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","className","s","wrapperForm","bodyForm","preventDefault","formGrup","formGgroupLabel","type","onChange","pattern","title","required","formGroupInput","submitButton","button","ContactList","children","container","listContainer","Contact","contact","id","deleteContact","itemContact","itemSpanContent","onClick","Filter","filter","filterForm","filterGrup","filterGrupLabel","filterGrupInput","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","setFilter","useEffect","setItem","stringify","state","filteredContacts","toLowerCase","includes","data","contactId","uuidv4","newContact","some","alert","currentTarget","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d5fd698.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyForm\":\"ContactForm_bodyForm__3I4kj\",\"wrapperForm\":\"ContactForm_wrapperForm__yxrEj\",\"stripesBlock\":\"ContactForm_stripesBlock__eiCnl\",\"formGrup\":\"ContactForm_formGrup__105HP\",\"formGroupInput\":\"ContactForm_formGroupInput__2ZDwG\",\"form-groupLabel\":\"ContactForm_form-groupLabel__1_YMt\",\"formGgroupLabel\":\"ContactForm_formGgroupLabel__IzKTw\",\"button\":\"ContactForm_button__fUFiR\",\"submitButton\":\"ContactForm_submitButton__1dHL5\"};","import  { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n      switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number});\n    reset();\n  };\n\n  const reset = () => {\n     setName('');\n    setNumber('');\n  };\n  \n    return (\n      <div className={s.wrapperForm}>\n        <form className={s.bodyForm} onSubmit={handleSubmit}>\n          <div className={s.formGrup}>\n            <label className={s.formGgroupLabel}>\n              Name\n              <input\n                type=\"text\"\n                value={name}\n                onChange={handleChange}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                className={s.formGroupInput}\n              />\n            </label>\n            <label className={s.formGgroupLabel}>\n              number\n              <input\n                type=\"tel\"\n                value={number}\n                onChange={handleChange}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                className={s.formGroupInput}\n              />\n            </label>\n          </div>\n          <div className={s.submitButton}>\n            <button className={s.button} type=\"submit\">\n              Add contact\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","// import React, { Component } from 'react';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ children}) {\n  \n    return (\n      <div className={s.container}>\n        <ul className={s.listContainer}>{children}</ul>\n      </div>\n    );\n  }\n\nexport default ContactList;\n","// import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nfunction Contact({ contact: { name, number, id }, deleteContact }) {\n \n\n    return (\n      <li className={s.itemContact}>\n        <span className={s.itemSpanContent}>{name}</span>\n        <span className={s.itemSpanContent}>{number}</span>\n        <button className={s.button} onClick={() => deleteContact(id)}>\n          Delet contact\n        </button>\n      </li>\n    );\n  }\n\n\nContact.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n  contact: PropTypes.objectOf(PropTypes.string.isRequired),\n};\nexport default Contact;\n","// import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ filter, onChange }) {\n \n\n    return (\n      <div className={s.filterForm}>\n        <div className={s.filterGrup}>\n          <label className={s.filterGrupLabel}>\n            Find contacts by name\n            <input\n              className={s.filterGrupInput}\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={onChange}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\nexport default Filter;\n","import  { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Contact from './ContactList/Contact';\nimport Filter from './Filter';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n\n  const deleteContact = id => {\n   setContacts(state => state.filter(contact => contact.id !== id));\n  };\n\n  const formSubmitHandler = data => {\n    \n    const { name } = data;\n    const contactId = uuidv4();\n    const newContact = { ...data, id: contactId };\n    const isNotUniqueContact = contacts.some(contact =>\n      contact.name.includes(name),\n    );\n\n    if (isNotUniqueContact) {\n      window.alert(`${name} is already in contacts`);\n      return;\n    }\n\n    setContacts(state => [...state, newContact]);\n  };\n\n  const changeFilter = e => {\n    setFilter( e.currentTarget.value);\n  };\n\n  const filterContacts = () => {\n   \n\n    return [...contacts].filter(({ name }) =>\n      name.toLowerCase().includes(filter),\n    );\n  };\n\n \n    const filteredContacts = filterContacts();\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter onChange={changeFilter} filter={filter} />\n\n        <ContactList deleteContact={deleteContact}>\n          {filteredContacts.map(contact => {\n            const contactId = uuidv4();\n\n            return (\n              <Contact\n                key={contactId}\n                contact={contact}\n                deleteContact={deleteContact}\n              />\n            );\n          })}\n        </ContactList>\n      </div>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContact\":\"Contact_itemContact__-CDuc\",\"itemSpanContent\":\"Contact_itemSpanContent__2oMCA\",\"button\":\"Contact_button__1VBnT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"Filter_filterForm__tjXIN\",\"filterGrup\":\"Filter_filterGrup__3FOTQ\",\"filterGrupInput\":\"Filter_filterGrupInput__1RM7U\",\"filterGrupLabel\":\"Filter_filterGrupLabel__2Mke2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"ContactList_listContainer__7Mf0Z\"};"],"sourceRoot":""}