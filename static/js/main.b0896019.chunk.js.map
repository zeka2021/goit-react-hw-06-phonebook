{"version":3,"sources":["ContactList/Contact/Contact.module.css","Filter/Filter.module.css","ContactList/ContactList.module.css","redux/actions.js","redux/reducers.js","redux/store.js","ContactForm/ContactForm.js","ContactList/ContactList.js","ContactList/Contact/Contact.js","Filter/Filter.js","App.js","index.js","ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","deleteContact","filterContact","items","createReducer","state","filter","_","contacts","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","reset","className","s","wrapperForm","bodyForm","onSubmit","preventDefault","some","contact","includes","window","alert","formGrup","formGgroupLabel","type","onChange","pattern","title","required","formGroupInput","submitButton","button","ContactList","children","container","listContainer","Contact","itemContact","itemSpanContent","onClick","Filter","filterForm","filterGrup","filterGrupLabel","filterGrupInput","currentTarget","App","filteredContacts","toLowerCase","map","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b0896019.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemContact\":\"Contact_itemContact__-CDuc\",\"itemSpanContent\":\"Contact_itemSpanContent__2oMCA\",\"button\":\"Contact_button__1VBnT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterForm\":\"Filter_filterForm__tjXIN\",\"filterGrup\":\"Filter_filterGrup__3FOTQ\",\"filterGrupInput\":\"Filter_filterGrupInput__1RM7U\",\"filterGrupLabel\":\"Filter_filterGrupLabel__2Mke2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"ContactList_listContainer__7Mf0Z\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('contact/add', data => ({\r\n  payload: {\r\n    ...data,\r\n    id: uuidv4(),\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('contact/delete');\r\nexport const filterContact = createAction('contact/filter');","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { addContact, deleteContact, filterContact } from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contacts = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contacts;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contacts from './reducers';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contacts),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import  { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../redux/actions';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n      switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n   const isNotUniqueContact = contacts.some(contact =>\n      contact.name.includes(name),\n    );\n\n    if (isNotUniqueContact) {\n      window.alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n     setName('');\n    setNumber('');\n  };\n  \n    return (\n      <div className={s.wrapperForm}>\n        <form className={s.bodyForm} onSubmit={handleSubmit}>\n          <div className={s.formGrup}>\n            <label className={s.formGgroupLabel}>\n              Name\n              <input\n                type=\"text\"\n                value={name}\n                onChange={handleChange}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                className={s.formGroupInput}\n              />\n            </label>\n            <label className={s.formGgroupLabel}>\n              number\n              <input\n                type=\"tel\"\n                value={number}\n                onChange={handleChange}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                className={s.formGroupInput}\n              />\n            </label>\n          </div>\n          <div className={s.submitButton}>\n            <button className={s.button} type=\"submit\">\n              Add contact\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n\n\nexport default ContactForm;\n","// import React, { Component } from 'react';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ children}) {\n  \n    return (\n      <div className={s.container}>\n        <ul className={s.listContainer}>{children}</ul>\n      </div>\n    );\n  }\n\nexport default ContactList;\n","// import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\nimport s from './Contact.module.css';\n\nfunction Contact({ contact: { name, number, id } }) {\n const dispatch = useDispatch();\n\n    return (\n      <li className={s.itemContact}>\n        <span className={s.itemSpanContent}>{name}</span>\n        <span className={s.itemSpanContent}>{number}</span>\n        <button className={s.button}\n          onClick={() =>  dispatch(deleteContact(id))}>\n          Delet contact\n        </button>\n      </li>\n    );\n  }\n\n\nContact.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n  contact: PropTypes.objectOf(PropTypes.string.isRequired),\n};\nexport default Contact;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../redux/actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n    return (\n      <div className={s.filterForm}>\n        <div className={s.filterGrup}>\n          <label className={s.filterGrupLabel}>\n            Find contacts by name\n            <input\n              className={s.filterGrupInput}\n              type=\"text\"\n              name=\"filter\"\n              value={filter}\n              onChange={e => dispatch(filterContact(e.currentTarget.value))}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n\n\nexport default Filter;\n","import  { useSelector } from 'react-redux';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Contact from './ContactList/Contact';\nimport Filter from './Filter';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const filteredContacts = [...contacts].filter(({ name }) =>\n    name.toLowerCase().includes(filter),\n  );\n \n \n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter  />      \n\n      <ContactList>\n          {filteredContacts.map(contact => (\n            <Contact key={uuidv4()} contact={contact} />\n          ))}\n        </ContactList>\n      </div>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <App />\n       </PersistGate>\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyForm\":\"ContactForm_bodyForm__3I4kj\",\"wrapperForm\":\"ContactForm_wrapperForm__yxrEj\",\"stripesBlock\":\"ContactForm_stripesBlock__eiCnl\",\"formGrup\":\"ContactForm_formGrup__105HP\",\"formGroupInput\":\"ContactForm_formGroupInput__2ZDwG\",\"form-groupLabel\":\"ContactForm_form-groupLabel__1_YMt\",\"formGgroupLabel\":\"ContactForm_formGgroupLabel__IzKTw\",\"button\":\"ContactForm_button__fUFiR\",\"submitButton\":\"ContactForm_submitButton__1dHL5\"};"],"sourceRoot":""}